/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tisoft2;

import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.swing.GroupLayout.Alignment.values;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author ASUS
 */
public class frmComanda extends javax.swing.JDialog {

    ComandaController controller = new ComandaController();
    private int mode = -1;
    private final int MODE_NEW = 1;
    private final int MODE_UPDATE = 2;

    public frmComanda(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        atualizarTabela();
    }

    public void salvarComanda() {
        if (txtComanda.getText() != null && txtChip.getText() != null) {
            if (controller.Add(new ComandaModel(txtComanda.getText(), txtChip.getText()))) {
                JOptionPane.showMessageDialog(null, "Comanda cadastrada com sucesso...");
                atualizarTabela();
                limparTexto();
//                txtComanda.requestFocus();
            }
        }
    }

    public void estadoInicial() {
        desabilitarTexto();
        limparTexto();
        btnNovo.setText("Novo");
        btnAlterar.setText("Alterar");
        this.mode = -1;
        btnExcluir.setEnabled(true);
        tblComanda.setEnabled(true);
        tblComanda.clearSelection();
    }

    public void estadoAlterar() {
        txtChip.setEnabled(true);
        this.mode = MODE_UPDATE;
        btnNovo.setText("Salvar");
        btnAlterar.setText("Cancelar");
        btnExcluir.setEnabled(false);

    }

    public void estadoNovo() {
        habilitarTexto();
        btnNovo.setText("Salvar");
        this.mode = MODE_NEW;
        btnAlterar.setText("Cancelar");
        btnExcluir.setEnabled(false);
        tblComanda.setEnabled(false);
        txtComanda.requestFocus();
    }

    public void atualizarTabela() {
        limparTabela();
        DefaultTableModel model = (DefaultTableModel) tblComanda.getModel();
        controller.setConnection(frmMain.con);
        controller.getList().forEach((comanda) -> {
            model.addRow(new Object[]{comanda.getComanda(), comanda.getChip()});

        });

    }

    public void limparTexto() {
        txtChip.setText("");
        txtComanda.setText("");
    }

    public void habilitarTexto() {
        txtChip.setEnabled(true);
        txtComanda.setEnabled(true);
    }

    public void desabilitarTexto() {
        txtChip.setEnabled(false);
        txtComanda.setEnabled(false);
    }

    public void limparTabela() {
        DefaultTableModel model = (DefaultTableModel) tblComanda.getModel();
        int numRows = model.getRowCount();
        if (numRows > 0) {
            while ((numRows = model.getRowCount()) != 0) {
                for (int i = 0; i <= numRows - 1; i++) {
                    model.removeRow(i);
                    numRows = numRows - 1;
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtComanda = new javax.swing.JTextField();
        txtChip = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblComanda = new javax.swing.JTable();
        btnAlterar = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Comanda:");

        jLabel2.setText("Chip:");

        txtComanda.setEnabled(false);
        txtComanda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtComandaKeyPressed(evt);
            }
        });

        txtChip.setEnabled(false);
        txtChip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChipActionPerformed(evt);
            }
        });
        txtChip.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtChipKeyPressed(evt);
            }
        });

        tblComanda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Comanda", "Chip"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblComanda.setColumnSelectionAllowed(true);
        tblComanda.getTableHeader().setReorderingAllowed(false);
        tblComanda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblComandaMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblComanda);
        tblComanda.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtComanda, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtChip, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btnNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluir)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAlterar, btnExcluir, btnNovo});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtComanda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtChip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAlterar)
                    .addComponent(btnExcluir)
                    .addComponent(btnNovo))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(337, 377));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtChipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChipActionPerformed
        if (mode == MODE_UPDATE) {
            if (controller.updateChipByComanda(Integer.parseInt(txtComanda.getText()), txtChip.getText())) {
                atualizarTabela();
                estadoInicial();
            }
        } else {
            frmMain.sendComand("05+ECAR+00+1+I[["+txtChip.getText().trim()+"[[[1[4[1[[[[[2[[[[[0[COMANDA[[");
            salvarComanda();
            estadoInicial();

        }
    }//GEN-LAST:event_txtChipActionPerformed

    private void txtComandaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtComandaKeyPressed
        if (evt.getExtendedKeyCode() == KeyEvent.VK_ENTER) {
            txtChip.requestFocus();
        }
        if (evt.getExtendedKeyCode() == KeyEvent.VK_ESCAPE) {
            limparTexto();
        }
    }//GEN-LAST:event_txtComandaKeyPressed

    private void txtChipKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtChipKeyPressed
        if (evt.getExtendedKeyCode() == KeyEvent.VK_ESCAPE) {
            limparTexto();
            txtComanda.requestFocus();
        }
    }//GEN-LAST:event_txtChipKeyPressed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int selectedRow = tblComanda.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Por favor, selecione algum item da tabela.");
        } else {
            int resposta = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir, esse item?", "Confirmar", JOptionPane.YES_NO_OPTION);
            if (resposta == 0) {
                if (controller.removeByComanda((int) tblComanda.getValueAt(selectedRow, 0))) {
                    String comando ="05+ECAR+00+1+E[["+tblComanda.getValueAt(selectedRow, 1).toString().trim()+"[[[[[[[[[[[[[[[[[[";
                    frmMain.sendComand(comando);
                    JOptionPane.showMessageDialog(null, "Removido com sucesso.");
                    limparTexto();
                    atualizarTabela();
                } else {
                    JOptionPane.showMessageDialog(null, "Erro ao Remover.");
                }
            }
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        if (mode == MODE_UPDATE) {
            if (controller.updateChipByComanda(Integer.parseInt(txtComanda.getText()), txtChip.getText())) {
                atualizarTabela();
                estadoInicial();
            }
        } else {
            estadoNovo();
            limparTexto();
        }
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        if (mode == MODE_NEW || mode == MODE_UPDATE) {
            estadoInicial();
        } else {
            int selectedRow = tblComanda.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(null, "Por favor selecione um item da tabela");

            } else {
                estadoAlterar();
            }
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void tblComandaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblComandaMousePressed

        int row = tblComanda.getSelectedRow();
        txtComanda.setText(String.valueOf(tblComanda.getValueAt(row, 0)).trim());
        txtChip.setText(String.valueOf(tblComanda.getValueAt(row, 1)).trim());

    }//GEN-LAST:event_tblComandaMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmComanda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmComanda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmComanda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmComanda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmComanda dialog = new frmComanda(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnNovo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblComanda;
    private javax.swing.JTextField txtChip;
    private javax.swing.JTextField txtComanda;
    // End of variables declaration//GEN-END:variables
}
